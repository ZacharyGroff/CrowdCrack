// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/ZacharyGroff/CrowdCrack/api"
	"github.com/ZacharyGroff/CrowdCrack/apiclient"
	"github.com/ZacharyGroff/CrowdCrack/client"
	"github.com/ZacharyGroff/CrowdCrack/encoder"
	"github.com/ZacharyGroff/CrowdCrack/logger"
	"github.com/ZacharyGroff/CrowdCrack/observer"
	"github.com/ZacharyGroff/CrowdCrack/queue"
	"github.com/ZacharyGroff/CrowdCrack/reader"
	"github.com/ZacharyGroff/CrowdCrack/requester"
	"github.com/ZacharyGroff/CrowdCrack/server"
	"github.com/ZacharyGroff/CrowdCrack/submitter"
	"github.com/ZacharyGroff/CrowdCrack/tracker"
	"github.com/ZacharyGroff/CrowdCrack/userinput"
	"github.com/ZacharyGroff/CrowdCrack/verifier"
	"github.com/ZacharyGroff/CrowdCrack/waiter"
)

// Injectors from wire.go:

func InitializeClient() client.Client {
	cmdLineConfigProvider := userinput.NewCmdLineConfigProvider()
	concurrentLogger := logger.NewConcurrentLogger(cmdLineConfigProvider)
	hashingRequestQueue := queue.NewHashingRequestQueue()
	hashingSubmissionQueue := queue.NewHashingSubmissionQueue()
	clientStopReasonQueue := queue.NewClientStopReasonQueue(cmdLineConfigProvider)
	sleeper := waiter.NewSleeper(cmdLineConfigProvider, concurrentLogger)
	hasherFactory := encoder.NewHasherFactory(cmdLineConfigProvider, concurrentLogger, hashingRequestQueue, hashingSubmissionQueue, clientStopReasonQueue, sleeper)
	hashApiClient := apiclient.NewHashApiClient(cmdLineConfigProvider)
	passwordRequester := requester.NewPasswordRequester(cmdLineConfigProvider, hashApiClient, concurrentLogger, hashingRequestQueue, clientStopReasonQueue, sleeper)
	hashSubmitter := submitter.NewHashSubmitter(cmdLineConfigProvider, hashApiClient, concurrentLogger, hashingSubmissionQueue, clientStopReasonQueue, sleeper)
	clientClient := client.NewClient(cmdLineConfigProvider, hasherFactory, concurrentLogger, passwordRequester, hashSubmitter)
	return clientClient
}

func InitializeServer() server.Server {
	cmdLineConfigProvider := userinput.NewCmdLineConfigProvider()
	hashQueue := queue.NewHashQueue(cmdLineConfigProvider)
	passwordQueue := queue.NewPasswordQueue(cmdLineConfigProvider)
	concurrentLogger := logger.NewConcurrentLogger(cmdLineConfigProvider)
	statsTracker := tracker.NewStatsTracker()
	hashApi := api.NewHashApi(cmdLineConfigProvider, hashQueue, passwordQueue, concurrentLogger, statsTracker)
	wordlistReader := reader.NewWordlistReader(cmdLineConfigProvider, passwordQueue)
	statsObserver := observer.NewStatsObserver(concurrentLogger, statsTracker, cmdLineConfigProvider)
	hashlistReader := reader.NewHashlistReader(cmdLineConfigProvider)
	hashVerifier := verifier.NewHashVerifier(hashQueue, hashlistReader, concurrentLogger, statsTracker)
	serverServer := server.NewServer(hashApi, concurrentLogger, wordlistReader, statsObserver, hashVerifier)
	return serverServer
}
